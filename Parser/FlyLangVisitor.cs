//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\danie\Documents\Projecten\FlyLang\FlyLang.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace FlyLang.Parser {
using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="FlyLangParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IFlyLangVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.program"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitProgram([NotNull] FlyLangParser.ProgramContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitStatement([NotNull] FlyLangParser.StatementContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.assignment"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAssignment([NotNull] FlyLangParser.AssignmentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.return"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitReturn([NotNull] FlyLangParser.ReturnContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.use"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitUse([NotNull] FlyLangParser.UseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.definition"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDefinition([NotNull] FlyLangParser.DefinitionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.if"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitIf([NotNull] FlyLangParser.IfContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.elif"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElif([NotNull] FlyLangParser.ElifContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.else"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElse([NotNull] FlyLangParser.ElseContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.while"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitWhile([NotNull] FlyLangParser.WhileContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.boolean"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBoolean([NotNull] FlyLangParser.BooleanContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.names"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNames([NotNull] FlyLangParser.NamesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.expression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpression([NotNull] FlyLangParser.ExpressionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.action"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAction([NotNull] FlyLangParser.ActionContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.varCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitVarCall([NotNull] FlyLangParser.VarCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.methodCall"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitMethodCall([NotNull] FlyLangParser.MethodCallContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.string"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitString([NotNull] FlyLangParser.StringContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.int"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitInt([NotNull] FlyLangParser.IntContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.float"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitFloat([NotNull] FlyLangParser.FloatContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="FlyLangParser.id"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitId([NotNull] FlyLangParser.IdContext context);
}
} // namespace FlyLang.Parser
